[{"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\index.js":"1","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\App.js":"2","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\pages\\Home.jsx":"3","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\pages\\Register.jsx":"4","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\pages\\Dashboard.jsx":"5","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\hooks\\useForm.js":"6","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\utils\\FormValidation.js":"7","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\routes\\Admin.jsx":"8","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\routes\\User.jsx":"9","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\tables\\MovieTable.jsx":"10","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\tables\\UserTable.jsx":"11","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\forms\\MovieEditForm.jsx":"12","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\forms\\MovieCreateForm.jsx":"13","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\forms\\UserCreateForm.jsx":"14","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\forms\\UserEditForm.jsx":"15","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\pages\\admin\\Users.jsx":"16","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\pages\\admin\\Movies.jsx":"17","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\forms\\LoginForm.jsx":"18","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\pages\\Landing.jsx":"19","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\Nav.jsx":"20","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\MovieCard.jsx":"21","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\pages\\Movie.jsx":"22","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\Seats.jsx":"23","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\Modal.jsx":"24"},{"size":362,"mtime":1610608107479,"results":"25","hashOfConfig":"26"},{"size":1845,"mtime":1610614815441,"results":"27","hashOfConfig":"26"},{"size":2414,"mtime":1610630266211,"results":"28","hashOfConfig":"26"},{"size":3344,"mtime":1610611948214,"results":"29","hashOfConfig":"26"},{"size":301,"mtime":1610597543613,"results":"30","hashOfConfig":"26"},{"size":1714,"mtime":1610611692531,"results":"31","hashOfConfig":"26"},{"size":2150,"mtime":1610549373906,"results":"32","hashOfConfig":"26"},{"size":827,"mtime":1610597628521,"results":"33","hashOfConfig":"26"},{"size":815,"mtime":1610615170189,"results":"34","hashOfConfig":"26"},{"size":2292,"mtime":1610514700889,"results":"35","hashOfConfig":"26"},{"size":2032,"mtime":1610549286689,"results":"36","hashOfConfig":"26"},{"size":6206,"mtime":1610549121084,"results":"37","hashOfConfig":"26"},{"size":6016,"mtime":1610514558650,"results":"38","hashOfConfig":"26"},{"size":3316,"mtime":1610549081923,"results":"39","hashOfConfig":"26"},{"size":4007,"mtime":1610549482749,"results":"40","hashOfConfig":"26"},{"size":582,"mtime":1610597471370,"results":"41","hashOfConfig":"26"},{"size":592,"mtime":1610597463496,"results":"42","hashOfConfig":"26"},{"size":2433,"mtime":1610611860247,"results":"43","hashOfConfig":"26"},{"size":643,"mtime":1610609506446,"results":"44","hashOfConfig":"26"},{"size":404,"mtime":1610612529477,"results":"45","hashOfConfig":"26"},{"size":351,"mtime":1610613660070,"results":"46","hashOfConfig":"26"},{"size":2709,"mtime":1610639135066,"results":"47","hashOfConfig":"26"},{"size":4512,"mtime":1610642062207,"results":"48","hashOfConfig":"26"},{"size":905,"mtime":1610642136700,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"306607",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\index.js",[],["104","105"],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\App.js",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\pages\\Home.jsx",["106"],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\pages\\Register.jsx",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\pages\\Dashboard.jsx",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\hooks\\useForm.js",["107"],"import { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback(values);\r\n      setIsSubmitting(false);\r\n    }\r\n  }, [errors]);\r\n\r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    delete errors[event.target.name];\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n\r\n    if (event.target.name === \"email\") {\r\n      if (!/\\S+@\\S+\\.\\S+/.test(event.target.value)) {\r\n        setErrors({ ...errors, email: \"Email is invalid\" });\r\n      }\r\n    }\r\n\r\n    if (event.target.name === \"contact\") {\r\n      if (!/[0-9]{11}/.test(event.target.value)) {\r\n        setErrors({ ...errors, contact: \"Contact must have 11 numbers\" });\r\n      }\r\n    }\r\n\r\n    if (event.target.name === \"password\") {\r\n      if (!/[a-zA-Z\\d]{8}/.test(event.target.value)) {\r\n        setErrors({ ...errors, password: \"Password must have 8 characters\" });\r\n      }\r\n    }\r\n\r\n    if (event.target.name === \"password1\") {\r\n      if (event.target.value !== values.password) {\r\n        setErrors({ ...errors, password1: \"Passwords do not match\" });\r\n      }\r\n    }\r\n    setIsSubmitting(false);\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    isSubmitting,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\utils\\FormValidation.js",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\routes\\Admin.jsx",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\routes\\User.jsx",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\tables\\MovieTable.jsx",[],["108","109"],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\tables\\UserTable.jsx",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\forms\\MovieEditForm.jsx",["110"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nimport useForm from \"../../hooks/useForm\";\r\nimport { validateMovie } from \"../../utils/FormValidation\";\r\n\r\nconst MovieForm = ({ match }) => {\r\n  const { id } = match.params;\r\n  const [image, setImagePreview] = useState();\r\n\r\n  const { data, isLoading, error } = useQuery(\"info\", async () => {\r\n    return await axios.get(`/api/movies/${id}`).then((res) => res.data);\r\n  });\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    handleChange,\r\n    handleSubmit,\r\n    errors,\r\n    setErrors,\r\n  } = useForm(submitForm, validateMovie);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setValues(data);\r\n    }\r\n  }, [data]);\r\n\r\n  if (isLoading) return <div className=\"\">Loading...</div>;\r\n\r\n  if (error) return <div className=\"\">Error Fetching data</div>;\r\n\r\n  // file handling\r\n  const fileHandler = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      setImagePreview(reader.result);\r\n    };\r\n  };\r\n\r\n  async function submitForm(values) {\r\n    try {\r\n      const response = await axios\r\n        .put(`/api/movies/${data._id}/update`, values)\r\n        .then((res) => res.data);\r\n\r\n      return response;\r\n    } catch (error) {\r\n      setErrors({ ...errors, message: error.response.data.message });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            onChange={handleChange}\r\n            className=\"form-input\"\r\n            value={values.title || \"\"}\r\n          />\r\n          {errors.title && <pre>{errors.title}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">Description</label>\r\n          <textarea\r\n            name=\"description\"\r\n            onChange={handleChange}\r\n            className=\"form-input\"\r\n            value={values.description || \"\"}\r\n          />\r\n          {errors.description && <pre>{errors.description}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">Director</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"director\"\r\n            onChange={handleChange}\r\n            value={values.director || \"\"}\r\n            className=\"form-input\"\r\n          />\r\n          {errors.director && <pre>{errors.director}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">casts</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"casts\"\r\n            value={values.casts || \"\"}\r\n            onChange={handleChange}\r\n            className=\"form-input\"\r\n          />\r\n          {errors.casts && <pre>{errors.casts}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">price</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"price\"\r\n            onChange={(e) => {\r\n              setValues({ ...values, price: Number(e.target.value) });\r\n            }}\r\n            value={values.price || \"\"}\r\n            className=\"form-input\"\r\n          />\r\n          {errors.price && <pre>{errors.price}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">category</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"category\"\r\n            onChange={handleChange}\r\n            className=\"form-input\"\r\n            value={values.category || \"\"}\r\n          />\r\n          {errors.category && <pre>{errors.category}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">cinema</label>\r\n          <select\r\n            name=\"cinema\"\r\n            onChange={(e) => {\r\n              setValues({ ...values, cinema: e.target.value });\r\n            }}\r\n          >\r\n            <option value={1}>1</option>\r\n            <option value={2}>2</option>\r\n            <option value={3}>3</option>\r\n            <option value={4}>4</option>\r\n          </select>\r\n          {errors.cinema && <pre>{errors.cinema}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">movieDuration</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"movieDuration\"\r\n            onChange={handleChange}\r\n            className=\"form-input\"\r\n            value={values.movieDuration || \"\"}\r\n          />\r\n          {errors.movieDuration && <pre>{errors.movieDuration}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">release</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"release\"\r\n            onChange={handleChange}\r\n            value={values.release || \"\"}\r\n            className=\"form-input\"\r\n          />\r\n          {errors.release && <pre>{errors.release}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">showDuration</label>\r\n          <select\r\n            name=\"showDuration\"\r\n            onChange={(e) => {\r\n              setValues({ ...values, showDuration: e.target.value });\r\n            }}\r\n          >\r\n            <option value={7}>1 week</option>\r\n            <option value={14}>2 weeks</option>\r\n            <option value={21}>3 weeks</option>\r\n            <option value={30}>1 month</option>\r\n          </select>\r\n          {errors.showDuration && <pre>{errors.showDuration}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">Image:</label>\r\n          <input\r\n            type=\"file\"\r\n            name=\"imageURL\"\r\n            accept=\"image/*\"\r\n            onChange={fileHandler}\r\n          />\r\n          <img src={values.imageURL || image} alt=\"cover\" />\r\n          {errors.imageURL && <pre>{errors.imageURL}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieForm;\r\n","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\forms\\MovieCreateForm.jsx",["111"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport useForm from \"../../hooks/useForm\";\r\nimport { validateMovie } from \"../../utils/FormValidation\";\r\n\r\nconst MovieForm = () => {\r\n  const [image, setImagePreview] = useState();\r\n  const history = useHistory();\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    handleChange,\r\n    handleSubmit,\r\n    errors,\r\n    setErrors,\r\n  } = useForm(submitForm, validateMovie);\r\n\r\n  // file handling\r\n  const fileHandler = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      setImagePreview(reader.result);\r\n    };\r\n  };\r\n\r\n  async function submitForm(values) {\r\n    try {\r\n      // upload photo\r\n\r\n      const imageURL = await axios\r\n        .post(\"/api/movies/upload\", { image })\r\n        .then((res) => res.data);\r\n\r\n      values.imageURL = imageURL.url;\r\n\r\n      console.log(values);\r\n\r\n      await axios.post(\"/api/movies/create\", values).then((res) => res.data);\r\n\r\n      history.push(\"/dashboard\");\r\n    } catch (error) {\r\n      setErrors({ ...errors, message: error.response.data.message });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            onChange={handleChange}\r\n            className=\"form-input\"\r\n            value={values.title || \"\"}\r\n          />\r\n          {errors.title && <pre>{errors.title}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">Description</label>\r\n          <textarea\r\n            name=\"description\"\r\n            onChange={handleChange}\r\n            className=\"form-input\"\r\n            value={values.description || \"\"}\r\n          />\r\n          {errors.description && <pre>{errors.description}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">Director</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"director\"\r\n            onChange={handleChange}\r\n            value={values.director || \"\"}\r\n            className=\"form-input\"\r\n          />\r\n          {errors.director && <pre>{errors.director}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">casts</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"casts\"\r\n            value={values.casts || \"\"}\r\n            onChange={handleChange}\r\n            className=\"form-input\"\r\n          />\r\n          {errors.casts && <pre>{errors.casts}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">price</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"price\"\r\n            onChange={(e) => {\r\n              setValues({ ...values, price: Number(e.target.value) });\r\n            }}\r\n            value={values.price || \"\"}\r\n            className=\"form-input\"\r\n          />\r\n          {errors.price && <pre>{errors.price}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">category</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"category\"\r\n            onChange={handleChange}\r\n            className=\"form-input\"\r\n            value={values.category || \"\"}\r\n          />\r\n          {errors.category && <pre>{errors.category}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">cinema</label>\r\n          <select\r\n            name=\"cinema\"\r\n            onChange={(e) => {\r\n              setValues({ ...values, cinema: e.target.value });\r\n            }}\r\n          >\r\n            <option value={1}>1</option>\r\n            <option value={2}>2</option>\r\n            <option value={3}>3</option>\r\n            <option value={4}>4</option>\r\n          </select>\r\n          {errors.cinema && <pre>{errors.cinema}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">movieDuration</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"movieDuration\"\r\n            onChange={handleChange}\r\n            className=\"form-input\"\r\n            value={values.movieDuration || \"\"}\r\n          />\r\n          {errors.movieDuration && <pre>{errors.movieDuration}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">release</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"release\"\r\n            onChange={handleChange}\r\n            value={values.release || \"\"}\r\n            className=\"form-input\"\r\n          />\r\n          {errors.release && <pre>{errors.release}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">showDuration</label>\r\n          <select\r\n            name=\"showDuration\"\r\n            onChange={(e) => {\r\n              setValues({ ...values, showDuration: e.target.value });\r\n            }}\r\n          >\r\n            <option value={7}>1 week</option>\r\n            <option value={14}>2 weeks</option>\r\n            <option value={21}>3 weeks</option>\r\n            <option value={30}>1 month</option>\r\n          </select>\r\n          {errors.showDuration && <pre>{errors.showDuration}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">Image:</label>\r\n          <input\r\n            type=\"file\"\r\n            name=\"imageURL\"\r\n            accept=\"image/*\"\r\n            onChange={fileHandler}\r\n          />\r\n          <img src={values.imageURL || image} alt=\"cover\" />\r\n          {errors.imageURL && <pre>{errors.imageURL}</pre>}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieForm;\r\n","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\forms\\UserCreateForm.jsx",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\forms\\UserEditForm.jsx",["112"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nimport useForm from \"../../hooks/useForm\";\r\nimport { validateEditUser } from \"../../utils/FormValidation\";\r\n\r\nconst UserCreateForm = ({ match }) => {\r\n  const { id } = match.params;\r\n  const {\r\n    values,\r\n    setValues,\r\n    errors,\r\n    setErrors,\r\n    handleChange,\r\n    handleSubmit,\r\n  } = useForm(register, validateEditUser);\r\n  const history = useHistory();\r\n\r\n  const { data, isLoading, error } = useQuery(\"info\", async () => {\r\n    return await axios.get(`/api/users/${id}`).then((res) => res.data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setValues(data);\r\n    }\r\n  }, [data]);\r\n\r\n  async function register(values) {\r\n    try {\r\n      const response = await axios\r\n        .put(`/api/users/${data._id}/update`, values)\r\n        .then((res) => res.data);\r\n\r\n      if (response) history.push(\"/home\");\r\n    } catch (error) {\r\n      setErrors(error.response.data);\r\n    }\r\n  }\r\n\r\n  if (isLoading) return <div className=\"\">Loading...</div>;\r\n\r\n  if (error) return <div className=\"\">Error Fetching data</div>;\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">Name:</label>\r\n          <input\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className=\"form-input\"\r\n            value={values.name}\r\n          />\r\n          {(errors.name || errors.message) && (\r\n            <pre>{errors.name || errors.message}</pre>\r\n          )}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">Username:</label>\r\n          <input\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            className=\"form-input\"\r\n            value={values.username}\r\n          />\r\n          {(errors.username || errors.message) && (\r\n            <pre>{errors.username || errors.message}</pre>\r\n          )}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">Email:</label>\r\n          <input\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"email\"\r\n            className=\"form-input\"\r\n            value={values.email}\r\n          />\r\n          {(errors.email || errors.message) && (\r\n            <pre>{errors.email || errors.message}</pre>\r\n          )}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">Contact:</label>\r\n          <input\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"contact\"\r\n            className=\"form-input\"\r\n            value={values.contact}\r\n          />\r\n          {(errors.contact || errors.message) && (\r\n            <pre>{errors.contact || errors.message}</pre>\r\n          )}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">Password:</label>\r\n          <input\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-input\"\r\n            value={values.password}\r\n          />\r\n          {(errors.password || errors.message) && (\r\n            <pre>{errors.password || errors.message}</pre>\r\n          )}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <label className=\"form-label\">Confirm Password:</label>\r\n          <input\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            name=\"password1\"\r\n            className=\"form-input\"\r\n          />\r\n          {(errors.password1 || errors.message) && (\r\n            <pre>{errors.password1 || errors.message}</pre>\r\n          )}\r\n        </div>\r\n        <div className=\"form-field\">\r\n          <button type=\"submit\">Register</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCreateForm;\r\n","E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\pages\\admin\\Users.jsx",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\pages\\admin\\Movies.jsx",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\forms\\LoginForm.jsx",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\pages\\Landing.jsx",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\Nav.jsx",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\MovieCard.jsx",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\pages\\Movie.jsx",[],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\Seats.jsx",["113"],"E:\\Web Dev\\reactjs\\sitickets\\frontend\\src\\components\\Modal.jsx",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":11,"column":28,"nodeType":"120","messageId":"121","endLine":11,"endColumn":33},{"ruleId":"122","severity":1,"message":"123","line":13,"column":6,"nodeType":"124","endLine":13,"endColumn":14,"suggestions":"125"},{"ruleId":"114","replacedBy":"126"},{"ruleId":"116","replacedBy":"127"},{"ruleId":"122","severity":1,"message":"128","line":29,"column":6,"nodeType":"124","endLine":29,"endColumn":12,"suggestions":"129"},{"ruleId":"118","severity":1,"message":"130","line":2,"column":17,"nodeType":"120","messageId":"121","endLine":2,"endColumn":26},{"ruleId":"122","severity":1,"message":"128","line":29,"column":6,"nodeType":"124","endLine":29,"endColumn":12,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":138,"column":29,"nodeType":"134","messageId":"135","endLine":138,"endColumn":31},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback', 'isSubmitting', and 'values'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["138"],["136"],["137"],"React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.",["139"],"'useEffect' is defined but never used.",["140"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"143","fix":"145"},"Update the dependencies array to be: [callback, errors, isSubmitting, values]",{"range":"146","text":"147"},"Update the dependencies array to be: [data, setValues]",{"range":"148","text":"149"},{"range":"150","text":"149"},[393,401],"[callback, errors, isSubmitting, values]",[727,733],"[data, setValues]",[756,762]]